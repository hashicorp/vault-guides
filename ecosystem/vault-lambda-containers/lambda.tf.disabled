resource "aws_lambda_function" "function" {
  function_name = "${var.environment_name}-function"
  description   = "Demo Vault AWS Lambda extension in container"
  role          = aws_iam_role.lambda.arn
  image_uri     = "${var.aws_account}.dkr.ecr.${var.aws_region}.amazonaws.com/demo-function:latest"
  package_type  = "Image"

  environment {
    variables = {
      VAULT_ADDR           = "http://${aws_instance.vault-server.public_ip}:8200",
      VAULT_AUTH_ROLE      = aws_iam_role.lambda.name,
      VAULT_AUTH_PROVIDER  = "aws",
      VAULT_SECRET_PATH_DB = "database/creds/lambda-function",
      VAULT_SECRET_FILE_DB = "/tmp/vault_secret.json",
      DATABASE_URL         = aws_db_instance.main.address
    }
  }
}

output "lambda" {
  value = <<EOF

The lambda function is ready to run.

    aws lambda invoke --function-name ${aws_lambda_function.function.function_name} /dev/null \
        --cli-binary-format raw-in-base64-out \
        --log-type Tail \
        --region ${var.aws_region} \
        | jq -r '.LogResult' \
        | base64 --decode

EOF
}